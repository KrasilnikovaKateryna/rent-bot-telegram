import os
import re
import traceback

from django.db.models import Q
from telebot.types import (
    ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardMarkup, InlineKeyboardButton,
    InputMediaPhoto, KeyboardButton
)

from .models import LeaseDraft, RealEstate, LeaseDraftPhoto, RealEstatePhoto
from .utils import set_user_state, get_message
from real_estate_tg_bot import settings

ADMIN_USER_ID = 811009969  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞


def send_language_choice(bot, user_id, profile):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞.
    """
    print("send_language_choice")
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton("–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data='lang_uk'),
        InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data='lang_ru')
    )
    bot.send_message(
        user_id,
        "–Ø–∫–æ—é –º–æ–≤–æ—é –±–∞–∂–∞—î—Ç–µ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏? / –ù–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?",
        reply_markup=markup
    )


def ask_for_name(bot, user_id, profile):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –∏–º–µ–Ω–∏.
    """
    print("ask_for_name")
    msg_key = 'please_enter_name'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=ReplyKeyboardRemove())


def handle_register_name(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    print("handle_register_name")
    user_id = message.from_user.id
    if text.strip():
        profile.name = text.strip()
        profile.save()
        set_user_state(profile, "register_age")  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –≤–æ–∑—Ä–∞—Å—Ç–∞
        ask_for_age(bot, user_id, profile)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –∏–º—è: {profile.name}")
    else:
        msg_key = 'please_enter_name'
        bot.send_message(user_id, get_message(profile, msg_key))


def ask_for_age(bot, user_id, profile):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞.
    """
    print("ask_for_age")
    msg_key = 'please_enter_age'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=ReplyKeyboardRemove())


def handle_register_age(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    print("handle_register_age")
    user_id = message.from_user.id
    if text.strip().isdigit():
        age = int(text.strip())
        if 18 <= age <= 100:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑—É–º–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –≤–æ–∑—Ä–∞—Å—Ç–∞
            profile.age = age
            profile.save()
            set_user_state(profile, "register_phone")
            ask_for_phone(bot, user_id, profile)
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –≤–æ–∑—Ä–∞—Å—Ç: {profile.age}")
        else:
            msg_key = 'invalid_age'
            bot.send_message(user_id, get_message(profile, msg_key))
    else:
        msg_key = 'invalid_age'
        bot.send_message(user_id, get_message(profile, msg_key))


def ask_for_phone(bot, user_id, profile):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É.
    """
    print("ask_for_phone")
    if profile.language == 'ru':
        button_text = "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Å –±–æ—Ç–æ–º"
        prompt_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"
    else:
        button_text = "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º –∑ –±–æ—Ç–æ–º"
        prompt_text = "–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:"

    markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    contact_button = KeyboardButton(text=button_text, request_contact=True)
    markup.add(contact_button)
    msg_key = 'please_share_phone'
    bot.send_message(user_id, prompt_text, reply_markup=markup)


def handle_start(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ 'start' - –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    print("handle_start")
    user_id = message.from_user.id

    if text in [get_message(profile, 'rent'), "–∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å üè†", "–æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ üè†", "–∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å", "–æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏"]:
        print("rent")
        profile.rent_types = []
        profile.prices = []
        profile.last_shown_estate_id = None
        profile.save()
        set_user_state(profile, "rent_choose_type")
        send_rent_type_choice(bot, user_id, profile)
    elif text in [get_message(profile, 'lease'), "—Å–¥–∞—Ç—å üíµ", "–∑–¥–∞—Ç–∏ üíµ", "–∑–¥–∞—Ç–∏", "—Å–¥–∞—Ç—å"]:
        print("lease")
        LeaseDraft.objects.filter(profile=profile).delete()
        LeaseDraft.objects.create(profile=profile)
        set_user_state(profile, "lease_photos")
        ask_to_load_photos(bot, user_id, profile)
    else:
        handle_help(bot, message, profile)


def send_rent_type_choice(bot, user_id, profile):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∞—Ä–µ–Ω–¥—ã.
    """
    print("send_rent_type_choice")
    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    types = ["–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–î–æ–º", "–ö–æ–º–Ω–∞—Ç–∞", "–î—Ä—É–≥–æ–µ", "–ó–∞–∫–æ–Ω—á–∏—Ç—å"] if profile.language == 'ru' else ["–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–ë—É–¥–∏–Ω–æ–∫", "–ö—ñ–º–Ω–∞—Ç–∞", "–Ü–Ω—à–µ", "–ó–∞–≤–µ—Ä—à–∏—Ç–∏"]
    for i in range(0, len(types), 2):
        row_buttons = types[i:i + 2]
        markup.row(*row_buttons)
    msg_key = 'choose_rent_type'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)


def handle_rent_choose_type(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∞—Ä–µ–Ω–¥—ã.
    """
    print("handle_rent_choose_type")
    user_id = message.from_user.id
    finish_keywords_ru = ["–∑–∞–∫–æ–Ω—á–∏—Ç—å", "–ó–∞–∫–æ–Ω—á–∏—Ç—å"]
    finish_keywords_uk = ["–∑–∞–≤–µ—Ä—à–∏—Ç–∏", "–ó–∞–≤–µ—Ä—à–∏—Ç–∏"]
    finish_keywords = finish_keywords_ru if profile.language == 'ru' else finish_keywords_uk

    if text not in finish_keywords:
        rent_types = profile.rent_types
        rent_types.append(text)
        profile.rent_types = rent_types
        profile.save()
        msg_key = 'rent_prompt'
        bot.send_message(user_id, get_message(profile, msg_key))
    elif text in finish_keywords:
        set_user_state(profile, "rent_choose_price")
        send_rent_price_choice(bot, user_id, profile)
    else:
        handle_help(bot, message, profile)


def send_rent_price_choice(bot, user_id, profile):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω.
    """
    print("send_rent_price_choice")
    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    prices = ["<5000", "5000-10000", "10000-15000", ">15000", "–ó–∞–∫–æ–Ω—á–∏—Ç—å"] if profile.language == 'ru' \
        else ["<5000", "5000-10000", "10000-15000", ">15000", "–ó–∞–≤–µ—Ä—à–∏—Ç–∏"]
    for i in range(0, len(prices), 2):
        row_buttons = prices[i:i + 2]
        markup.row(*row_buttons)
    msg_key = 'choose_price_range'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)


def handle_rent_choose_price(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Ü–µ–Ω –¥–ª—è –∞—Ä–µ–Ω–¥—ã.
    """
    print("handle_rent_choose_price")
    user_id = message.from_user.id
    finish_keywords_ru = ["–∑–∞–∫–æ–Ω—á–∏—Ç—å", "–ó–∞–∫–æ–Ω—á–∏—Ç—å"]
    finish_keywords_uk = ["–∑–∞–≤–µ—Ä—à–∏—Ç–∏", "–ó–∞–≤–µ—Ä—à–∏—Ç–∏"]
    finish_keywords = finish_keywords_ru if profile.language == 'ru' else finish_keywords_uk

    valid_prices_ru = ["<5000", "5000-10000", "10000-15000", ">15000", "–∑–∞–∫–æ–Ω—á–∏—Ç—å"]
    valid_prices_uk = ["<5000", "5000-10000", "10000-15000", ">15000", "–∑–∞–≤–µ—Ä—à–∏—Ç–∏"]
    valid_prices = valid_prices_ru if profile.language == 'ru' else valid_prices_uk

    if text.lower() not in [word.lower() for word in valid_prices]:
        handle_help(bot, message, profile)
        return

    if text.lower() not in ["–∑–∞–∫–æ–Ω—á–∏—Ç—å", "–∑–∞–≤–µ—Ä—à–∏—Ç–∏"]:
        prices = profile.prices
        prices.append(text)
        profile.prices = prices
        profile.save()
        msg_key = 'rent_prompt'
        bot.send_message(user_id, get_message(profile, msg_key))
    else:
        set_user_state(profile, "show_variants")
        show_variants(bot, profile, user_id)


def get_filtered_estates(profile):
    """
    –§–∏–ª—å—Ç—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    rent_types = profile.rent_types
    prices = profile.prices

    qs = RealEstate.objects.filter(is_for_rent=True)
    if rent_types:
        qs = qs.filter(estate_type__in=rent_types)

    price_filter = Q()
    for pr in prices:
        if pr == "<5000":
            price_filter |= Q(price__lt=5000)
        elif pr == "5000-10000":
            price_filter |= Q(price__gte=5000, price__lte=10000)
        elif pr == "10000-15000":
            price_filter |= Q(price__gte=10000, price__lte=15000)
        elif pr == ">15000":
            price_filter |= Q(price__gt=15000)

    qs = qs.filter(price_filter).distinct().order_by('id')  # –£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ–º –ø–æ id –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    return qs


def show_variants(bot, profile, user_id):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    print("show_variants")
    qs = get_filtered_estates(profile)
    count = qs.count()
    if count == 0:
        msg_key = 'no_options_found'
        bot.send_message(user_id, get_message(profile, msg_key))
        markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        markup.add(get_message(profile, 'modify_search'), get_message(profile, 'lease_property'))
        msg_key = 'continue_search'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
        return

    profile.last_shown_estate_id = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –º–∞—Ä–∫–µ—Ä
    profile.save()

    show_single_variant(bot, profile, user_id)


def show_single_variant(bot, profile, user_id):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    qs = get_filtered_estates(profile)
    last_id = profile.last_shown_estate_id

    if last_id:
        estate_qs = qs.filter(id__gt=last_id).order_by('id').first()
    else:
        estate_qs = qs.first()

    if not estate_qs:
        msg_key = 'no_options_found'
        bot.send_message(user_id, get_message(profile, msg_key))
        markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        markup.add(get_message(profile, 'modify_search'), get_message(profile, 'lease_property'))
        msg_key = 'continue_search'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
    profile.last_shown_estate_id = estate_qs.id
    profile.save()

    real_estate = estate_qs
    photos = RealEstatePhoto.objects.filter(real_estate=real_estate)

    inline_kb = InlineKeyboardMarkup()
    inline_kb.add(InlineKeyboardButton(get_message(profile, 'rent'), callback_data=f"rent_{real_estate.id}"))

    description = real_estate.description

    msg = (f"‚¨ÜÔ∏è\n{get_message(profile, 'type')}: {real_estate.estate_type}\n"
           f"{get_message(profile, 'price')}: {real_estate.price}\n"
           f"{get_message(profile, 'rooms')}: {real_estate.rooms}\n\n{description}")

    media_group = [InputMediaPhoto(photo.image) for photo in photos]

    if media_group:
        bot.send_media_group(user_id, media_group)
    bot.send_message(user_id, msg, reply_markup=inline_kb)

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(get_message(profile, 'next'), get_message(profile, 'modify_search'))
    bot.send_message(user_id, get_message(profile, 'choose_action'), reply_markup=markup)


def handle_show_variants(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("handle_show_variants")
    user_id = message.from_user.id
    if (profile.language == 'ru' and text.lower() == "–¥–∞–ª—å—à–µ ‚û°Ô∏è") or \
       (profile.language == 'uk' and text.lower() == "–¥–∞–ª—ñ ‚û°Ô∏è"):
        show_single_variant(bot, profile, user_id)
    elif (profile.language == 'ru' and text.lower() == "–∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ üîç") or \
         (profile.language == 'uk' and text.lower() == "–∑–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É üîç"):
        profile.rent_types = []
        profile.prices = []
        profile.last_shown_estate_id = None
        profile.save()
        set_user_state(profile, "rent_choose_type")
        send_rent_type_choice(bot, user_id, profile)
    elif (profile.language == 'ru' and text.lower() == "—Å–¥–∞—Ç—å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å üè†") or \
         (profile.language == 'uk' and text.lower() == "–∑–¥–∞—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å üè†"):
        LeaseDraft.objects.filter(profile=profile).delete()
        LeaseDraft.objects.create(profile=profile)
        set_user_state(profile, "lease_photos")
        ask_to_load_photos(bot, user_id, profile)
    else:
        handle_help(bot, message, profile)


def want_to_rent_callback(bot, profile, call):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å" –ø–æ–¥ –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("want_to_rent_callback")
    user_id = call.from_user.id
    username = profile.username
    name = profile.name
    phone = profile.phone_number
    age = profile.age

    msg_key = 'notify_moderator'
    bot.send_message(user_id, get_message(profile, msg_key))

    description = extract_description(call.message.text, profile.language)

    current_real_estate = RealEstate.objects.filter(description=description).last()

    if current_real_estate:
        estate_owner = current_real_estate.owner
        owner_username = estate_owner.username
        owner_name = estate_owner.name
        owner_phone = estate_owner.phone_number
        owner_age = estate_owner.age

        photo_objects = RealEstatePhoto.objects.filter(real_estate=current_real_estate)
        photos = [obj.image for obj in photo_objects]

        media_group = [InputMediaPhoto(photo) for photo in photos]

        renter = f"{username}, —ñ–º'—è {name}, {phone}, –≤—ñ–∫ {age}"
        owner = f"{owner_username}, —ñ–º'—è {owner_name}, {owner_phone}, –≤—ñ–∫ {owner_age}"

        message_to_admin = f"@{renter} —Ö–æ—á–µ –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å —É @{owner}"

        if media_group:
            media_group[0].caption = message_to_admin
            bot.send_media_group(ADMIN_USER_ID, media_group)
        else:
            bot.send_message(ADMIN_USER_ID, message_to_admin)


def handle_lease_photos(bot, profile, message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å–¥–∞—á–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("handle_lease_photos")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()

    done_text = "–ì–æ—Ç–æ–≤–æ ‚úÖ"
    back_text = "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"


    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(done_text, back_text)

    if message.content_type == 'photo':
        file_id = message.photo[-1].file_id
        file_info = bot.get_file(file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        filename = f"lease_photos/{draft.id}_{file_id}.jpg"
        file_path = os.path.join(settings.MEDIA_ROOT, filename)
        os.makedirs(os.path.dirname(file_path), exist_ok=True)

        with open(file_path, 'wb') as f:
            f.write(downloaded_file)

        LeaseDraftPhoto.objects.create(lease_draft=draft, image=filename)

        bot.send_message(user_id, get_message(profile, 'added_photo'))

    elif message.content_type == 'text':
        text = message.text.lower()
        if text == "–≥–æ—Ç–æ–≤–æ ‚úÖ":
            if not LeaseDraftPhoto.objects.filter(lease_draft=draft).exists():
                bot.send_message(
                    user_id,
                    get_message(profile, 'lease_photo_prompt'),
                    reply_markup=markup
                )
                return
            set_user_state(profile, "lease_type")
            send_lease_type_choice(bot, user_id, profile)
        elif text == "–Ω–∞–∑–∞–¥ ‚Ü©Ô∏è":
            draft.delete()
            set_user_state(profile, "start")
            markup_main = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup_main.add(get_message(profile, 'rent'), get_message(profile, 'lease'))
            bot.send_message(user_id, get_message(profile, 'choose_action'), reply_markup=markup_main)
        else:
            handle_help(bot, message, profile)


def send_lease_type_choice(bot, user_id, profile):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–¥–∞—á–∏.
    """
    print("send_lease_type_choice")
    markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    types = ["–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–î–æ–º", "–ö–æ–º–Ω–∞—Ç–∞", "–î—Ä—É–≥–æ–µ"] if profile.language == 'ru' else ["–ö–≤–∞—Ä—Ç–∏—Ä–∞", "–ë—É–¥–∏–Ω–æ–∫", "–ö—ñ–º–Ω–∞—Ç–∞", "–Ü–Ω—à–µ"]
    markup.add(*types)
    msg_key = 'lease_type_prompt'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)


def handle_lease_type(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–¥–∞—á–∏.
    """
    print("handle_lease_type")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()
    valid_types_ru = ["–∫–≤–∞—Ä—Ç–∏—Ä–∞", "–¥–æ–º", "–∫–æ–º–Ω–∞—Ç–∞"]
    valid_types_uk = ["–∫–≤–∞—Ä—Ç–∏—Ä–∞", "–±—É–¥–∏–Ω–æ–∫", "–∫—ñ–º–Ω–∞—Ç–∞"]

    if (profile.language == 'ru' and text.lower() in valid_types_ru) or \
       (profile.language == 'uk' and text.lower() in valid_types_uk):
        draft.estate_type = text.lower()
        draft.save()
        set_user_state(profile, "lease_price")
        msg_key = 'lease_price_prompt'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=ReplyKeyboardRemove())
    elif (profile.language == 'ru' and text.lower() == "–¥—Ä—É–≥–æ–µ") or \
         (profile.language == 'uk' and text.lower() == "—ñ–Ω—à–µ"):
        set_user_state(profile, "lease_type_custom")
        msg_key = 'lease_type_custom_prompt'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=ReplyKeyboardRemove())
    else:
        handle_help(bot, message, profile)


def handle_lease_type_custom(bot, profile, message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–¥–∞—á–∏.
    """
    print("handle_lease_type_custom")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()
    custom_type = message.text.strip()
    if custom_type:
        draft.estate_type = custom_type
        draft.save()
        set_user_state(profile, "lease_price")
        msg_key = 'lease_price_prompt'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=ReplyKeyboardRemove())
    else:
        handle_help(bot, message, profile)


def handle_lease_price(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ü–µ–Ω—ã –∑–∞ –º–µ—Å—è—Ü –¥–ª—è —Å–¥–∞—á–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("handle_lease_price")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()
    try:
        price = float(message.text)
        draft.price = price
        draft.save()
        set_user_state(profile, "lease_rooms")
        msg_key = 'lease_rooms_prompt'
        bot.send_message(user_id, get_message(profile, msg_key))
    except ValueError:
        handle_help(bot, message, profile)


def handle_lease_rooms(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç –¥–ª—è —Å–¥–∞—á–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("handle_lease_rooms")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()
    try:
        rooms = int(message.text)
        draft.rooms = rooms
        draft.save()
        set_user_state(profile, "lease_description")
        msg_key = 'lease_description_prompt'
        bot.send_message(user_id, get_message(profile, msg_key))
    except ValueError:
        handle_help(bot, message, profile)


def handle_lease_description(bot, profile, message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–¥–∞—á–∏.
    """
    print("handle_lease_description")
    user_id = message.from_user.id
    draft = LeaseDraft.objects.filter(profile=profile).last()
    draft.description = message.text
    draft.save()
    set_user_state(profile, "lease_confirm")

    description = draft.description
    preview_msg = (f"{get_message(profile, 'type')}: {draft.estate_type}\n"
                   f"{get_message(profile, 'price')}: {draft.price}\n"
                   f"{get_message(profile, 'rooms')}: {draft.rooms}\n\n{description}")

    photos = LeaseDraftPhoto.objects.filter(lease_draft=draft)
    if photos.exists():
        media_group = [InputMediaPhoto(photo.image) for photo in photos]
        media_group[0].caption = preview_msg
        bot.send_media_group(user_id, media_group)
    else:
        bot.send_message(user_id, preview_msg)

    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    if profile.language == 'ru':
        markup.add("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ", "–û—Ç–º–µ–Ω–∞ ‚ùå")
    else:
        markup.add("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ", "–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå")
    msg_key = 'lease_confirm_prompt'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)


def handle_lease_confirm(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ —Å–¥–∞—á–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.
    """
    print("handle_lease_confirm")
    user_id = message.from_user.id
    if (profile.language == 'ru' and text.lower() == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ") or \
       (profile.language == 'uk' and text.lower() == "–ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ ‚úÖ"):
        if profile.free_ads_remaining > 0:
            profile.free_ads_remaining -= 1
            profile.save()

            draft = LeaseDraft.objects.filter(profile=profile).last()
            estate_type = draft.estate_type
            price = draft.price
            rooms = draft.rooms
            desc = draft.description

            estate = RealEstate.objects.create(
                owner=profile,
                estate_type=estate_type,
                price=price,
                rooms=rooms,
                description=desc,
                is_for_rent=True
            )


            for p in LeaseDraftPhoto.objects.filter(lease_draft=draft):
                RealEstatePhoto.objects.create(real_estate=estate, image=p.image)
            draft.delete()

            markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(get_message(profile, 'rent'), get_message(profile, 'lease'))

            msg_key = 'lease_confirm_success'
            bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
            set_user_state(profile, "start")
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ —Å–¥–∞—á–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")
        else:
            set_user_state(profile, "contact_moderator")
            markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            if profile.language == 'ru':
                markup.add("–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", "–û—Ç–º–µ–Ω–∞")
            else:
                markup.add("–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", "–°–∫–∞—Å—É–≤–∞—Ç–∏")
            msg_key = 'lease_confirm_limit'
            bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –Ω–æ –¥–æ—Å—Ç–∏–≥ –ª–∏–º–∏—Ç–∞.")
    elif (profile.language == 'ru' and text.lower() == "–æ—Ç–º–µ–Ω–∞ ‚ùå") or \
         (profile.language == 'uk' and text.lower() == "—Å–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå"):
        LeaseDraft.objects.filter(profile=profile).delete()
        markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        markup.add(get_message(profile, 'rent'), get_message(profile, 'lease'))
        msg_key = 'lease_cancelled'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
        set_user_state(profile, "start")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –æ—Ç–º–µ–Ω–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ —Å–¥–∞—á–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")
    else:
        handle_help(bot, message, profile)


def handle_contact_moderator(bot, profile, message, text):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.
    """
    print("handle_contact_moderator")
    user_id = message.from_user.id

    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(get_message(profile, 'rent'), get_message(profile, 'lease'))

    if (profile.language == 'ru' and text.lower() == "—Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º") or \
       (profile.language == 'uk' and text.lower() == "–∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"):
        msg_key = 'notify_moderator'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
        set_user_state(profile, "start")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} —Å–≤—è–∑–∞–ª—Å—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.")
    elif (profile.language == 'ru' and text.lower() == "–æ—Ç–º–µ–Ω–∞") or \
         (profile.language == 'uk' and text.lower() == "—Å–∫–∞—Å—É–≤–∞—Ç–∏"):
        LeaseDraft.objects.filter(profile=profile).delete()
        set_user_state(profile, "start")
        msg_key = 'lease_cancelled'
        bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –æ—Ç–º–µ–Ω–∏–ª –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.")
    else:
        handle_help(bot, message, profile)


def handle_help(bot, message, profile):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    user_id = message.from_user.id
    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(get_message(profile, 'rent'), get_message(profile, 'lease'))
    msg_key = 'unknown_command'
    bot.send_message(user_id, get_message(profile, msg_key), reply_markup=markup)
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {profile.username} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ.")


def ask_to_load_photos(bot, user_id, profile):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –¥–ª—è —Å–¥–∞—á–∏.
    """
    done_text = "–ì–æ—Ç–æ–≤–æ ‚úÖ"
    back_text = "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è"

    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    markup.add(done_text, back_text)
    msg_key = 'lease_photo_prompt'
    bot.send_message(
        user_id,
        get_message(profile, msg_key),
        reply_markup=markup
    )


def extract_description(text, language):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —è–∑—ã–∫–∞.
    """
    if language == 'ru':
        pattern = r"(?:–¢–∏–ø: .+|–¶–µ–Ω–∞: .+|–ö–æ–º–Ω–∞—Ç: .+)\s*\n+(.*)"
    elif language == 'uk':
        pattern = r"(?:–¢–∏–ø: .+|–¶—ñ–Ω–∞: .+|–ö—ñ–º–Ω–∞—Ç: .+)\s*\n+(.*)"
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π
        pattern = r"(?:–¢–∏–ø: .+|–¶–µ–Ω–∞: .+|–ö–æ–º–Ω–∞—Ç: .+)\s*\n+(.*)"

    match = re.search(pattern, text, re.DOTALL)
    if match:
        description = match.group(1).strip()
        return description
    return "No description found"